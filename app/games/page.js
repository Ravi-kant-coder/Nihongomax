"use client";
import { useState, useEffect } from "react";
import LeftSideBar from "@/app/LeftSideBar";
import { ArrowBigRight } from "lucide-react";
import ScrollupBtn from "../ScrollupBtn";

const wordsList = [
  "ALBUM",
  "HINGE",
  "MONEY",
  "SCRAP",
  "GAMER",
  "GLASS",
  "AMPLE",
  "CHEEK",
  "SHAME",
  "MINCE",
  "CHUNK",
  "ROYAL",
  "SQUAD",
  "REBUT",
  "CIGAR",
];

// https://api.frontendexpert.io/api/fe/wordle-words

const WordGame = () => {
  const [solution, setSolution] = useState("");
  const [guesses, setGuesses] = useState(Array(6).fill(null));
  const [currentGuess, setCurrentGuess] = useState("");
  const [isCurrentGuess, setIsCurrentGuess] = useState("");
  const randomIndex = Math.floor(Math.random() * wordsList.length);
  const initialSolution = wordsList[randomIndex];

  useEffect(() => {
    const handleType = (e) => {
      setCurrentGuess((oldGuess) => oldGuess + e.key);
    };
    window.addEventListener("keydown", handleType);
    console.log(currentGuess);
    return () => window.removeEventListener("keydown", handleType);
  }, []);

  useEffect(() => {
    const fetchWord = async () => {
      const randomWord =
        wordsList[Math.floor(Math.random() * wordsList.length)];
      setSolution(randomWord);
    };
    fetchWord();
  }, []);

  useEffect(() => {
    setSolution(initialSolution);
  }, []);

  return (
    <div className="mb-20 mt-15">
      <div className="p-2 w-1/5 overflow-y-auto scroll-smooth overscroll-contain">
        <LeftSideBar />
      </div>
      <div className="flex flex-col md:ml-70">
        <div
          className="text-center text-3xl font-semibold text-green-900 dark:text-green-600
           my-2"
        >
          Guess the Word (generated by machine) with the help of the Hint.
          <br />{" "}
          <span className="text-red-900 dark:text-red-500 text-2xl">
            You have 6 attempts.
          </span>
          <p
            className="mb-1 text-black dark:text-gray-400 text-xl flex
             justify-center items-center"
          >
            1. If your alphabet is in the word, it wil be shown in Gray color
            like this
            <span
              className="ml-1 text-white p-1 bg-black/50 dark:bg-gray-600 border 
              border-black w-10 h-10 flex items-center justify-center font-bold text-2xl"
            >
              N
            </span>
          </p>
          <p
            className="dark:text-gray-400 text-black text-xl flex justify-center
             items-center"
          >
            2. If it is there and also at right place, it wil be shown in Black
            color like this
            <span
              className="ml-1 text-white p-1 bg-black border 
              border-black w-10 h-10 flex items-center justify-center font-bold text-2xl"
            >
              N
            </span>
          </p>
        </div>
        <div
          className="dark:bg-[rgb(50,50,50)] border dark:border-[rgb(100,100,100)] 
          md:mx-8 mx-2 border-black h-[80vh] rounded-xl p-4"
        >
          <p className="text-center text-2xl dark:text-teal-400 my-5">
            Hint : {solution}
          </p>
          {guesses.map((guess, i) => {
            const isCurrentGuess =
              i === guesses.findIndex((val) => val == null);
            <Line
              className="text-white p-1 bg-gray-500 border-black w-10 h-10 flex
                 items-center justify-center font-bold text-2xl dark:bg-gray-600"
              key={guess}
              guess={isCurrentGuess ? currentGuess : guess ?? ""}
            />;
          })}

          <div className="flex justify-around items-center">
            <button
              className="px-2 border hover:bg-gray-700 hover:text-white
                 dark:hover:border-black dark:bg-black dark:hover:bg-gray-900
                  p-1 border-black hover:border-gray-700
                  cursor-pointer rounded flex items-center justify-center"
            >
              Enter
              <ArrowBigRight className="w-5 h-5" />
            </button>
            <div className="text-xl bg-gray-300 p-1 rounded-lg text-black">
              Your Score
            </div>
          </div>
        </div>
      </div>
      <ScrollupBtn />
    </div>
  );
};
function Line({ guess }) {
  const tiles = [];
  for (let i = 0; i < 6; i++) {
    const char = guess[i];
    tiles.push(
      <div
        key={i}
        className="border border-gray-600 w-10 h-10 flex items-center justify-center 
            font-bold text-2xl"
      >
        {char}
      </div>
    );
  }
  return <div className="">{tiles}</div>;
}
export default WordGame;
